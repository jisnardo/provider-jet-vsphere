---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusters.vspheredatastorecluster.vsphere.jet.crossplane.io
spec:
  group: vspheredatastorecluster.vsphere.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - vspherejet
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterId:
                    description: The managed object ID of the datacenter to put the
                      datastore cluster in.
                    type: string
                  folder:
                    description: The name of the folder to locate the datastore cluster
                      in.
                    type: string
                  sdrsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for storage DRS.
                    type: object
                  sdrsAutomationLevel:
                    description: The default automation level for all virtual machines
                      in this storage cluster.
                    type: string
                  sdrsDefaultIntraVmAffinity:
                    description: When true, storage DRS keeps VMDKs for individual
                      VMs on the same datastore by default.
                    type: boolean
                  sdrsEnabled:
                    description: Enable storage DRS for this datastore cluster.
                    type: boolean
                  sdrsFreeSpaceThreshold:
                    description: The threshold, in GB, that storage DRS uses to make
                      decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsFreeSpaceThresholdMode:
                    description: The free space threshold to use. When set to utilization,
                      drs_space_utilization_threshold is used, and when set to freeSpace,
                      drs_free_space_threshold is used.
                    type: string
                  sdrsFreeSpaceUtilizationDifference:
                    description: The threshold, in percent, of difference between
                      space utilization in datastores before storage DRS makes decisions
                      to balance the space.
                    type: number
                  sdrsIoBalanceAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      I/O load imbalances.
                    type: string
                  sdrsIoLatencyThreshold:
                    description: The I/O latency threshold, in milliseconds, that
                      storage DRS uses to make recommendations to move disks from
                      this datastore.
                    type: number
                  sdrsIoLoadBalanceEnabled:
                    description: Enable I/O load balancing for this datastore cluster.
                    type: boolean
                  sdrsIoLoadImbalanceThreshold:
                    description: The difference between load in datastores in the
                      cluster before storage DRS makes recommendations to balance
                      the load.
                    type: number
                  sdrsIoReservableIopsThreshold:
                    description: The threshold of reservable IOPS of all virtual machines
                      on the datastore before storage DRS makes recommendations to
                      move VMs off of a datastore.
                    type: number
                  sdrsIoReservablePercentThreshold:
                    description: The threshold, in percent, of actual estimated performance
                      of the datastore (in IOPS) that storage DRS uses to make recommendations
                      to move VMs off of a datastore when the total reservable IOPS
                      exceeds the threshold.
                    type: number
                  sdrsIoReservableThresholdMode:
                    description: The reservable IOPS threshold to use, percent in
                      the event of automatic, or manual threshold in the event of
                      manual.
                    type: string
                  sdrsLoadBalanceInterval:
                    description: The storage DRS poll interval, in minutes.
                    type: number
                  sdrsPolicyEnforcementAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      storage and VM policy violations.
                    type: string
                  sdrsRuleEnforcementAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      affinity rule violations.
                    type: string
                  sdrsSpaceBalanceAutomationLevel:
                    description: Overrides the default automation settings when correcting
                      disk space imbalances.
                    type: string
                  sdrsSpaceUtilizationThreshold:
                    description: The threshold, in percent of used space, that storage
                      DRS uses to make decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsVmEvacuationAutomationLevel:
                    description: Overrides the default automation settings when generating
                      recommendations for datastore evacuation.
                    type: string
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                required:
                - datacenterId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
