---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: virtualswitches.vspheredistributedvirtualswitch.vsphere.jet.crossplane.io
spec:
  group: vspheredistributedvirtualswitch.vsphere.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - vspherejet
    kind: VirtualSwitch
    listKind: VirtualSwitchList
    plural: virtualswitches
    singular: virtualswitch
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualSwitch is the Schema for the VirtualSwitchs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualSwitchSpec defines the desired state of VirtualSwitch
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  activeUplinks:
                    description: List of active uplinks used for load balancing, matching
                      the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  allowForgedTransmits:
                    description: Controls whether or not the virtual network adapter
                      is allowed to send network traffic with a different MAC address
                      than that of its own.
                    type: boolean
                  allowMacChanges:
                    description: Controls whether or not the Media Access Control
                      (MAC) address can be changed.
                    type: boolean
                  allowPromiscuous:
                    description: Enable promiscuous mode on the network. This flag
                      indicates whether or not all traffic is seen on a given port.
                    type: boolean
                  backupnfcMaximumMbit:
                    description: The maximum allowed usage for the backupNfc traffic
                      class, in Mbits/sec.
                    type: number
                  backupnfcReservationMbit:
                    description: The amount of guaranteed bandwidth for the backupNfc
                      traffic class, in Mbits/sec.
                    type: number
                  backupnfcShareCount:
                    description: The amount of shares to allocate to the backupNfc
                      traffic class for a custom share level.
                    type: number
                  backupnfcShareLevel:
                    description: The allocation level for the backupNfc traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  blockAllPorts:
                    description: Indicates whether to block all ports by default.
                    type: boolean
                  checkBeacon:
                    description: Enable beacon probing on the ports this policy applies
                      to.
                    type: boolean
                  contactDetail:
                    description: The contact detail for this DVS.
                    type: string
                  contactName:
                    description: The contact name for this DVS.
                    type: string
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: A list of custom attributes to set on this resource.
                    type: object
                  datacenterId:
                    description: The ID of the datacenter to create this virtual switch
                      in.
                    type: string
                  description:
                    description: The description of the DVS.
                    type: string
                  directpathGen2Allowed:
                    description: Allow VMDirectPath Gen2 on the ports this policy
                      applies to.
                    type: boolean
                  egressShapingAverageBandwidth:
                    description: The average egress bandwidth in bits per second if
                      egress shaping is enabled on the port.
                    type: number
                  egressShapingBurstSize:
                    description: The maximum egress burst size allowed in bytes if
                      egress shaping is enabled on the port.
                    type: number
                  egressShapingEnabled:
                    description: True if the traffic shaper is enabled for egress
                      traffic on the port.
                    type: boolean
                  egressShapingPeakBandwidth:
                    description: The peak egress bandwidth during bursts in bits per
                      second if egress traffic shaping is enabled on the port.
                    type: number
                  failback:
                    description: If true, the teaming policy will re-activate failed
                      interfaces higher in precedence when they come back up.
                    type: boolean
                  faulttoleranceMaximumMbit:
                    description: The maximum allowed usage for the faultTolerance
                      traffic class, in Mbits/sec.
                    type: number
                  faulttoleranceReservationMbit:
                    description: The amount of guaranteed bandwidth for the faultTolerance
                      traffic class, in Mbits/sec.
                    type: number
                  faulttoleranceShareCount:
                    description: The amount of shares to allocate to the faultTolerance
                      traffic class for a custom share level.
                    type: number
                  faulttoleranceShareLevel:
                    description: The allocation level for the faultTolerance traffic
                      class. Can be one of high, low, normal, or custom.
                    type: string
                  folder:
                    description: The folder to create this virtual switch in, relative
                      to the datacenter.
                    type: string
                  hbrMaximumMbit:
                    description: The maximum allowed usage for the hbr traffic class,
                      in Mbits/sec.
                    type: number
                  hbrReservationMbit:
                    description: The amount of guaranteed bandwidth for the hbr traffic
                      class, in Mbits/sec.
                    type: number
                  hbrShareCount:
                    description: The amount of shares to allocate to the hbr traffic
                      class for a custom share level.
                    type: number
                  hbrShareLevel:
                    description: The allocation level for the hbr traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  host:
                    description: A host member specification.
                    items:
                      properties:
                        devices:
                          description: Name of the physical NIC to be added to the
                            proxy switch.
                          items:
                            type: string
                          type: array
                        hostSystemId:
                          description: The managed object ID of the host this specification
                            applies to.
                          type: string
                      required:
                      - hostSystemId
                      type: object
                    type: array
                  ignoreOtherPvlanMappings:
                    description: Whether to ignore existing PVLAN mappings not managed
                      by this resource. Defaults to false.
                    type: boolean
                  ingressShapingAverageBandwidth:
                    description: The average ingress bandwidth in bits per second
                      if ingress shaping is enabled on the port.
                    type: number
                  ingressShapingBurstSize:
                    description: The maximum ingress burst size allowed in bytes if
                      ingress shaping is enabled on the port.
                    type: number
                  ingressShapingEnabled:
                    description: True if the traffic shaper is enabled for ingress
                      traffic on the port.
                    type: boolean
                  ingressShapingPeakBandwidth:
                    description: The peak ingress bandwidth during bursts in bits
                      per second if ingress traffic shaping is enabled on the port.
                    type: number
                  ipv4Address:
                    description: The IPv4 address of the switch. This can be used
                      to see the DVS as a unique device with NetFlow.
                    type: string
                  iscsiMaximumMbit:
                    description: The maximum allowed usage for the iSCSI traffic class,
                      in Mbits/sec.
                    type: number
                  iscsiReservationMbit:
                    description: The amount of guaranteed bandwidth for the iSCSI
                      traffic class, in Mbits/sec.
                    type: number
                  iscsiShareCount:
                    description: The amount of shares to allocate to the iSCSI traffic
                      class for a custom share level.
                    type: number
                  iscsiShareLevel:
                    description: The allocation level for the iSCSI traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  lacpApiVersion:
                    description: The Link Aggregation Control Protocol group version
                      in the switch. Can be one of singleLag or multipleLag.
                    type: string
                  lacpEnabled:
                    description: Whether or not to enable LACP on all uplink ports.
                    type: boolean
                  lacpMode:
                    description: The uplink LACP mode to use. Can be one of active
                      or passive.
                    type: string
                  linkDiscoveryOperation:
                    description: Whether to advertise or listen for link discovery.
                      Valid values are advertise, both, listen, and none.
                    type: string
                  linkDiscoveryProtocol:
                    description: The discovery protocol type. Valid values are cdp
                      and lldp.
                    type: string
                  managementMaximumMbit:
                    description: The maximum allowed usage for the management traffic
                      class, in Mbits/sec.
                    type: number
                  managementReservationMbit:
                    description: The amount of guaranteed bandwidth for the management
                      traffic class, in Mbits/sec.
                    type: number
                  managementShareCount:
                    description: The amount of shares to allocate to the management
                      traffic class for a custom share level.
                    type: number
                  managementShareLevel:
                    description: The allocation level for the management traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  maxMtu:
                    description: The maximum MTU on the switch.
                    type: number
                  multicastFilteringMode:
                    description: The multicast filtering mode on the switch. Can be
                      one of legacyFiltering, or snooping.
                    type: string
                  netflowActiveFlowTimeout:
                    description: The number of seconds after which active flows are
                      forced to be exported to the collector.
                    type: number
                  netflowCollectorIpAddress:
                    description: IP address for the netflow collector, using IPv4
                      or IPv6. IPv6 is supported in vSphere Distributed Switch Version
                      6.0 or later.
                    type: string
                  netflowCollectorPort:
                    description: The port for the netflow collector.
                    type: number
                  netflowEnabled:
                    description: Indicates whether to enable netflow on all ports.
                    type: boolean
                  netflowIdleFlowTimeout:
                    description: The number of seconds after which idle flows are
                      forced to be exported to the collector.
                    type: number
                  netflowInternalFlowsOnly:
                    description: Whether to limit analysis to traffic that has both
                      source and destination served by the same host.
                    type: boolean
                  netflowObservationDomainId:
                    description: The observation Domain ID for the netflow collector.
                    type: number
                  netflowSamplingRate:
                    description: The ratio of total number of packets to the number
                      of packets analyzed. Set to 0 to disable sampling, meaning that
                      all packets are analyzed.
                    type: number
                  networkResourceControlEnabled:
                    description: Whether or not to enable network resource control,
                      enabling advanced traffic shaping and resource control features.
                    type: boolean
                  networkResourceControlVersion:
                    description: The network I/O control version to use. Can be one
                      of version2 or version3.
                    type: string
                  nfsMaximumMbit:
                    description: The maximum allowed usage for the nfs traffic class,
                      in Mbits/sec.
                    type: number
                  nfsReservationMbit:
                    description: The amount of guaranteed bandwidth for the nfs traffic
                      class, in Mbits/sec.
                    type: number
                  nfsShareCount:
                    description: The amount of shares to allocate to the nfs traffic
                      class for a custom share level.
                    type: number
                  nfsShareLevel:
                    description: The allocation level for the nfs traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  notifySwitches:
                    description: If true, the teaming policy will notify the broadcast
                      network of a NIC failover, triggering cache updates.
                    type: boolean
                  portPrivateSecondaryVlanId:
                    description: The secondary VLAN ID for this port.
                    type: number
                  pvlanMapping:
                    description: A private VLAN (PVLAN) mapping.
                    items:
                      properties:
                        primaryVlanId:
                          description: The primary VLAN ID. The VLAN IDs of 0 and
                            4095 are reserved and cannot be used in this property.
                          type: number
                        pvlanType:
                          description: The private VLAN type. Valid values are promiscuous,
                            community and isolated.
                          type: string
                        secondaryVlanId:
                          description: The secondary VLAN ID. The VLAN IDs of 0 and
                            4095 are reserved and cannot be used in this property.
                          type: number
                      required:
                      - primaryVlanId
                      - pvlanType
                      - secondaryVlanId
                      type: object
                    type: array
                  standbyUplinks:
                    description: List of standby uplinks used for load balancing,
                      matching the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                  teamingPolicy:
                    description: The network adapter teaming policy. Can be one of
                      loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, failover_explicit,
                      or loadbalance_loadbased.
                    type: string
                  txUplink:
                    description: If true, a copy of packets sent to the switch will
                      always be forwarded to an uplink in addition to the regular
                      packet forwarded done by the switch.
                    type: boolean
                  uplinks:
                    description: A list of uplink ports. The contents of this list
                      control both the uplink count and names of the uplinks on the
                      DVS across hosts.
                    items:
                      type: string
                    type: array
                  vdpMaximumMbit:
                    description: The maximum allowed usage for the vdp traffic class,
                      in Mbits/sec.
                    type: number
                  vdpReservationMbit:
                    description: The amount of guaranteed bandwidth for the vdp traffic
                      class, in Mbits/sec.
                    type: number
                  vdpShareCount:
                    description: The amount of shares to allocate to the vdp traffic
                      class for a custom share level.
                    type: number
                  vdpShareLevel:
                    description: The allocation level for the vdp traffic class. Can
                      be one of high, low, normal, or custom.
                    type: string
                  version:
                    description: The version of this virtual switch. Allowed versions
                      are 7.0.3, 7.0.0, 6.6.0, 6.5.0, 6.0.0, 5.5.0, 5.1.0, and 5.0.0.
                    type: string
                  virtualmachineMaximumMbit:
                    description: The maximum allowed usage for the virtualMachine
                      traffic class, in Mbits/sec.
                    type: number
                  virtualmachineReservationMbit:
                    description: The amount of guaranteed bandwidth for the virtualMachine
                      traffic class, in Mbits/sec.
                    type: number
                  virtualmachineShareCount:
                    description: The amount of shares to allocate to the virtualMachine
                      traffic class for a custom share level.
                    type: number
                  virtualmachineShareLevel:
                    description: The allocation level for the virtualMachine traffic
                      class. Can be one of high, low, normal, or custom.
                    type: string
                  vlanId:
                    description: The VLAN ID for single VLAN mode. 0 denotes no VLAN.
                    type: number
                  vlanRange:
                    description: The VLAN ID for single VLAN mode. 0 denotes no VLAN.
                    items:
                      properties:
                        maxVlan:
                          description: The minimum VLAN to use in the range.
                          type: number
                        minVlan:
                          description: The minimum VLAN to use in the range.
                          type: number
                      required:
                      - maxVlan
                      - minVlan
                      type: object
                    type: array
                  vmotionMaximumMbit:
                    description: The maximum allowed usage for the vmotion traffic
                      class, in Mbits/sec.
                    type: number
                  vmotionReservationMbit:
                    description: The amount of guaranteed bandwidth for the vmotion
                      traffic class, in Mbits/sec.
                    type: number
                  vmotionShareCount:
                    description: The amount of shares to allocate to the vmotion traffic
                      class for a custom share level.
                    type: number
                  vmotionShareLevel:
                    description: The allocation level for the vmotion traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                  vsanMaximumMbit:
                    description: The maximum allowed usage for the vsan traffic class,
                      in Mbits/sec.
                    type: number
                  vsanReservationMbit:
                    description: The amount of guaranteed bandwidth for the vsan traffic
                      class, in Mbits/sec.
                    type: number
                  vsanShareCount:
                    description: The amount of shares to allocate to the vsan traffic
                      class for a custom share level.
                    type: number
                  vsanShareLevel:
                    description: The allocation level for the vsan traffic class.
                      Can be one of high, low, normal, or custom.
                    type: string
                required:
                - datacenterId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VirtualSwitchStatus defines the observed state of VirtualSwitch.
            properties:
              atProvider:
                properties:
                  configVersion:
                    type: string
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
