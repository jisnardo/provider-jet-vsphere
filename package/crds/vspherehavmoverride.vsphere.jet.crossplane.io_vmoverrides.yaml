---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vmoverrides.vspherehavmoverride.vsphere.jet.crossplane.io
spec:
  group: vspherehavmoverride.vsphere.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - vspherejet
    kind: VMOverride
    listKind: VMOverrideList
    plural: vmoverrides
    singular: vmoverride
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VMOverride is the Schema for the VMOverrides API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VMOverrideSpec defines the desired state of VMOverride
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  computeClusterId:
                    description: The managed object ID of the cluster.
                    type: string
                  haDatastoreApdRecoveryAction:
                    description: Controls the action to take on this virtual machine
                      if an APD status on an affected datastore clears in the middle
                      of an APD event. Can be one of useClusterDefault, none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: Controls the action to take on this virtual machine
                      when the cluster has detected loss to all paths to a relevant
                      datastore. Can be one of clusterDefault, disabled, warning,
                      restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: Controls the delay in seconds to wait after an APD
                      timeout event to execute the response action defined in ha_datastore_apd_response.
                      Specify -1 to use the cluster setting.
                    type: number
                  haDatastorePdlResponse:
                    description: Controls the action to take on this virtual machine
                      when the cluster has detected a permanent device loss to a relevant
                      datastore. Can be one of clusterDefault, disabled, warning,
                      or restartAggressive.
                    type: string
                  haHostIsolationResponse:
                    description: The action to take on this virtual machine when a
                      host is isolated from the rest of the cluster. Can be one of
                      clusterIsolationResponse, none, powerOff, or shutdown.
                    type: string
                  haVmFailureInterval:
                    description: If a heartbeat from this virtual machine is not received
                      within this configured interval, the virtual machine is marked
                      as failed. The value is in seconds.
                    type: number
                  haVmMaximumFailureWindow:
                    description: The length of the reset window in which ha_vm_maximum_resets
                      can operate. When this window expires, no more resets are attempted
                      regardless of the setting configured in ha_vm_maximum_resets.
                      -1 means no window, meaning an unlimited reset time is allotted.
                    type: number
                  haVmMaximumResets:
                    description: The maximum number of resets that HA will perform
                      to this virtual machine when responding to a failure event.
                    type: number
                  haVmMinimumUptime:
                    description: The time, in seconds, that HA waits after powering
                      on this virtual machine before monitoring for heartbeats.
                    type: number
                  haVmMonitoring:
                    description: The type of virtual machine monitoring to use for
                      this virtual machine. Can be one of vmMonitoringDisabled, vmMonitoringOnly,
                      or vmAndAppMonitoring.
                    type: string
                  haVmMonitoringUseClusterDefaults:
                    description: Determines whether or not the cluster's default settings
                      or the VM override settings specified in this resource are used
                      for virtual machine monitoring. The default is true (use cluster
                      defaults) - set to false to have overrides take effect.
                    type: boolean
                  haVmRestartPriority:
                    description: The restart priority for this virtual machine when
                      vSphere detects a host failure. Can be one of clusterRestartPriority,
                      lowest, low, medium, high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: The maximum time, in seconds, that vSphere HA will
                      wait for the virtual machine to be ready. Use -1 to use the
                      cluster default.
                    type: number
                  virtualMachineId:
                    description: The managed object ID of the virtual machine.
                    type: string
                required:
                - computeClusterId
                - virtualMachineId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VMOverrideStatus defines the observed state of VMOverride.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
