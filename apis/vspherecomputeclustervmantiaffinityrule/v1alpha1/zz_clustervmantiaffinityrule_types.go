/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterVMAntiAffinityRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ClusterVMAntiAffinityRuleParameters struct {

	// The managed object ID of the cluster.
	// +kubebuilder:validation:Required
	ComputeClusterID *string `json:"computeClusterId" tf:"compute_cluster_id,omitempty"`

	// Enable this rule in the cluster.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// When true, prevents any virtual machine operations that may violate this rule.
	// +kubebuilder:validation:Optional
	Mandatory *bool `json:"mandatory,omitempty" tf:"mandatory,omitempty"`

	// The UUIDs of the virtual machines to run on hosts different from each other.
	// +kubebuilder:validation:Required
	VirtualMachineIds []*string `json:"virtualMachineIds" tf:"virtual_machine_ids,omitempty"`
}

// ClusterVMAntiAffinityRuleSpec defines the desired state of ClusterVMAntiAffinityRule
type ClusterVMAntiAffinityRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterVMAntiAffinityRuleParameters `json:"forProvider"`
}

// ClusterVMAntiAffinityRuleStatus defines the observed state of ClusterVMAntiAffinityRule.
type ClusterVMAntiAffinityRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterVMAntiAffinityRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterVMAntiAffinityRule is the Schema for the ClusterVMAntiAffinityRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vspherejet}
type ClusterVMAntiAffinityRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterVMAntiAffinityRuleSpec   `json:"spec"`
	Status            ClusterVMAntiAffinityRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterVMAntiAffinityRuleList contains a list of ClusterVMAntiAffinityRules
type ClusterVMAntiAffinityRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ClusterVMAntiAffinityRule `json:"items"`
}

// Repository type metadata.
var (
	ClusterVMAntiAffinityRule_Kind             = "ClusterVMAntiAffinityRule"
	ClusterVMAntiAffinityRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ClusterVMAntiAffinityRule_Kind}.String()
	ClusterVMAntiAffinityRule_KindAPIVersion   = ClusterVMAntiAffinityRule_Kind + "." + CRDGroupVersion.String()
	ClusterVMAntiAffinityRule_GroupVersionKind = CRDGroupVersion.WithKind(ClusterVMAntiAffinityRule_Kind)
)

func init() {
	SchemeBuilder.Register(&ClusterVMAntiAffinityRule{}, &ClusterVMAntiAffinityRuleList{})
}
