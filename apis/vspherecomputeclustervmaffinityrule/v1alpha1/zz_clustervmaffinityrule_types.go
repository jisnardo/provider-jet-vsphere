/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterVMAffinityRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ClusterVMAffinityRuleParameters struct {

	// The managed object ID of the cluster.
	// +kubebuilder:validation:Required
	ComputeClusterID *string `json:"computeClusterId" tf:"compute_cluster_id,omitempty"`

	// Enable this rule in the cluster.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// When true, prevents any virtual machine operations that may violate this rule.
	// +kubebuilder:validation:Optional
	Mandatory *bool `json:"mandatory,omitempty" tf:"mandatory,omitempty"`

	// The UUIDs of the virtual machines to run on the same host together.
	// +kubebuilder:validation:Required
	VirtualMachineIds []*string `json:"virtualMachineIds" tf:"virtual_machine_ids,omitempty"`
}

// ClusterVMAffinityRuleSpec defines the desired state of ClusterVMAffinityRule
type ClusterVMAffinityRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterVMAffinityRuleParameters `json:"forProvider"`
}

// ClusterVMAffinityRuleStatus defines the observed state of ClusterVMAffinityRule.
type ClusterVMAffinityRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterVMAffinityRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterVMAffinityRule is the Schema for the ClusterVMAffinityRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vspherejet}
type ClusterVMAffinityRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterVMAffinityRuleSpec   `json:"spec"`
	Status            ClusterVMAffinityRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterVMAffinityRuleList contains a list of ClusterVMAffinityRules
type ClusterVMAffinityRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ClusterVMAffinityRule `json:"items"`
}

// Repository type metadata.
var (
	ClusterVMAffinityRule_Kind             = "ClusterVMAffinityRule"
	ClusterVMAffinityRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ClusterVMAffinityRule_Kind}.String()
	ClusterVMAffinityRule_KindAPIVersion   = ClusterVMAffinityRule_Kind + "." + CRDGroupVersion.String()
	ClusterVMAffinityRule_GroupVersionKind = CRDGroupVersion.WithKind(ClusterVMAffinityRule_Kind)
)

func init() {
	SchemeBuilder.Register(&ClusterVMAffinityRule{}, &ClusterVMAffinityRuleList{})
}
